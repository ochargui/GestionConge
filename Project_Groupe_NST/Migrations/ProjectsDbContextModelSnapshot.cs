// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_Groupe_NST.Models;

namespace Project_Groupe_NST.Migrations
{
    [DbContext(typeof(ProjectsDbContext))]
    partial class ProjectsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project_Groupe_NST.Models.Absence", b =>
                {
                    b.Property<int>("idAbsence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("DateDebutAbsence")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DateFin")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DateRetourAbsence")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("EtatAbsence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Usersid")
                        .HasColumnType("int");

                    b.Property<int>("idEtatAbsence")
                        .HasColumnType("int");

                    b.Property<int>("idUsers")
                        .HasColumnType("int");

                    b.Property<int>("idtypeAbsence")
                        .HasColumnType("int");

                    b.Property<string>("isValid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("typeAbsenceidTAbsence")
                        .HasColumnType("int");

                    b.HasKey("idAbsence");

                    b.HasIndex("Usersid");

                    b.HasIndex("typeAbsenceidTAbsence");

                    b.ToTable("Absence");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Activite", b =>
                {
                    b.Property<int>("idActivite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("DateCreactionAct")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DateDebutAct")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EtatActiviteidEActivite")
                        .HasColumnType("int");

                    b.Property<string>("NomActivite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeActiviteidTActivite")
                        .HasColumnType("int");

                    b.Property<int>("idEtatActivite")
                        .HasColumnType("int");

                    b.Property<int>("idtypeActivite")
                        .HasColumnType("int");

                    b.Property<string>("isValid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idActivite");

                    b.HasIndex("EtatActiviteidEActivite");

                    b.HasIndex("TypeActiviteidTActivite");

                    b.ToTable("Activite");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.CRA", b =>
                {
                    b.Property<int>("idCRA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("conge_non_paye")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("conge_paye")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("date")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("dure_conge")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCRA");

                    b.ToTable("CRA");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.EtatActivite", b =>
                {
                    b.Property<int>("idEActivite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idEActivite");

                    b.ToTable("EtatActivite");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.EtatMission", b =>
                {
                    b.Property<int>("idEtatMission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescriptionEtatMission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("etatMission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isValidEtatMission")
                        .HasColumnType("bit");

                    b.HasKey("idEtatMission");

                    b.ToTable("EtatMission");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.EtatProjet", b =>
                {
                    b.Property<int>("idEProjet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idEProjet");

                    b.ToTable("EtatProjet");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.EtatTache", b =>
                {
                    b.Property<int>("idEtatTache")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descriptionEtatTache")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("etatTache")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idEtatTache");

                    b.ToTable("EtatTache");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Mission", b =>
                {
                    b.Property<int>("idMission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActiviteidActivite")
                        .HasColumnType("int");

                    b.Property<int?>("EtatMissionidEtatMission")
                        .HasColumnType("int");

                    b.Property<int?>("ProjetidProjet")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateCreationMission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateDebutMission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateFinMission")
                        .HasColumnType("datetime2");

                    b.Property<string>("descriptionMission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idActivite")
                        .HasColumnType("int");

                    b.Property<int>("idEtatMission")
                        .HasColumnType("int");

                    b.Property<int>("idProjet")
                        .HasColumnType("int");

                    b.Property<string>("nomMission")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idMission");

                    b.HasIndex("ActiviteidActivite");

                    b.HasIndex("EtatMissionidEtatMission");

                    b.HasIndex("ProjetidProjet");

                    b.ToTable("Mission");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Notification", b =>
                {
                    b.Property<int>("idNot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("DateNotif")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("IdUserAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUserReception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Usersid")
                        .HasColumnType("int");

                    b.Property<int>("idUsers")
                        .HasColumnType("int");

                    b.HasKey("idNot");

                    b.HasIndex("Usersid");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.OrdreMission", b =>
                {
                    b.Property<int>("idOrdreMission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FonctionOrdreMission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MissionidMission")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateDebutOrdreMission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateFinOrdreMission")
                        .HasColumnType("datetime2");

                    b.Property<int>("idMission")
                        .HasColumnType("int");

                    b.HasKey("idOrdreMission");

                    b.HasIndex("MissionidMission");

                    b.ToTable("OrdreMission");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Pointage", b =>
                {
                    b.Property<int>("idPointage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("DateConnexion")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DateDeconnexion")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("Usersid")
                        .HasColumnType("int");

                    b.Property<int>("idUsers")
                        .HasColumnType("int");

                    b.HasKey("idPointage");

                    b.HasIndex("Usersid");

                    b.ToTable("Pointage");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Projet", b =>
                {
                    b.Property<int>("idProjet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActiviteidActivite")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DateCreaction")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("DateDebutA")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EtatProjetidEProjet")
                        .HasColumnType("int");

                    b.Property<string>("NomProjet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type_ProjetidTProjet")
                        .HasColumnType("int");

                    b.Property<int>("idActivite")
                        .HasColumnType("int");

                    b.Property<int>("idEtatProjet")
                        .HasColumnType("int");

                    b.Property<int>("idtypeProjet")
                        .HasColumnType("int");

                    b.Property<string>("isValid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idProjet");

                    b.HasIndex("ActiviteidActivite");

                    b.HasIndex("EtatProjetidEProjet");

                    b.HasIndex("Type_ProjetidTProjet");

                    b.ToTable("Projet");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Role", b =>
                {
                    b.Property<int>("idRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idRole");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Tache", b =>
                {
                    b.Property<int>("idTache")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EtatTacheidEtatTache")
                        .HasColumnType("int");

                    b.Property<int?>("MissionidMission")
                        .HasColumnType("int");

                    b.Property<int?>("ProjetidProjet")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateCreationTache")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateDebutTache")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateFinTache")
                        .HasColumnType("datetime2");

                    b.Property<string>("descriptionTache")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("estimationTache")
                        .HasColumnType("real");

                    b.Property<int>("idEtatTache")
                        .HasColumnType("int");

                    b.Property<int>("idMession")
                        .HasColumnType("int");

                    b.Property<int>("idProjet")
                        .HasColumnType("int");

                    b.Property<bool>("isValidTache")
                        .HasColumnType("bit");

                    b.Property<string>("nomTache")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("workDoneTache")
                        .HasColumnType("bit");

                    b.HasKey("idTache");

                    b.HasIndex("EtatTacheidEtatTache");

                    b.HasIndex("MissionidMission");

                    b.HasIndex("ProjetidProjet");

                    b.ToTable("Tache");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.TypeActivite", b =>
                {
                    b.Property<int>("idTActivite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTActivite");

                    b.ToTable("typeActivite");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Type_Projet", b =>
                {
                    b.Property<int>("idTProjet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTProjet");

                    b.ToTable("Type_Projet");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CRAidCRA")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idCRA")
                        .HasColumnType("int");

                    b.Property<int>("idRole")
                        .HasColumnType("int");

                    b.Property<int>("roleid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("CRAidCRA");

                    b.HasIndex("roleid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.typeAbsence", b =>
                {
                    b.Property<int>("idTAbsence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTAbsence");

                    b.ToTable("typeAbsence");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Absence", b =>
                {
                    b.HasOne("Project_Groupe_NST.Models.Users", null)
                        .WithMany("Absence")
                        .HasForeignKey("Usersid");

                    b.HasOne("Project_Groupe_NST.Models.typeAbsence", null)
                        .WithMany("Absences")
                        .HasForeignKey("typeAbsenceidTAbsence");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Activite", b =>
                {
                    b.HasOne("Project_Groupe_NST.Models.EtatActivite", null)
                        .WithMany("Activites")
                        .HasForeignKey("EtatActiviteidEActivite");

                    b.HasOne("Project_Groupe_NST.Models.TypeActivite", null)
                        .WithMany("Activites")
                        .HasForeignKey("TypeActiviteidTActivite");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Mission", b =>
                {
                    b.HasOne("Project_Groupe_NST.Models.Activite", null)
                        .WithMany("Missions")
                        .HasForeignKey("ActiviteidActivite");

                    b.HasOne("Project_Groupe_NST.Models.EtatMission", null)
                        .WithMany("Missions")
                        .HasForeignKey("EtatMissionidEtatMission");

                    b.HasOne("Project_Groupe_NST.Models.Projet", null)
                        .WithMany("Missions")
                        .HasForeignKey("ProjetidProjet");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Notification", b =>
                {
                    b.HasOne("Project_Groupe_NST.Models.Users", null)
                        .WithMany("Notification")
                        .HasForeignKey("Usersid");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.OrdreMission", b =>
                {
                    b.HasOne("Project_Groupe_NST.Models.Mission", null)
                        .WithMany("OrdreMissions")
                        .HasForeignKey("MissionidMission");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Pointage", b =>
                {
                    b.HasOne("Project_Groupe_NST.Models.Users", null)
                        .WithMany("pointages")
                        .HasForeignKey("Usersid");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Projet", b =>
                {
                    b.HasOne("Project_Groupe_NST.Models.Activite", null)
                        .WithMany("Projets")
                        .HasForeignKey("ActiviteidActivite");

                    b.HasOne("Project_Groupe_NST.Models.EtatProjet", null)
                        .WithMany("Projets")
                        .HasForeignKey("EtatProjetidEProjet");

                    b.HasOne("Project_Groupe_NST.Models.Type_Projet", null)
                        .WithMany("Projets")
                        .HasForeignKey("Type_ProjetidTProjet");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Tache", b =>
                {
                    b.HasOne("Project_Groupe_NST.Models.EtatTache", null)
                        .WithMany("Taches")
                        .HasForeignKey("EtatTacheidEtatTache");

                    b.HasOne("Project_Groupe_NST.Models.Mission", null)
                        .WithMany("Taches")
                        .HasForeignKey("MissionidMission");

                    b.HasOne("Project_Groupe_NST.Models.Projet", null)
                        .WithMany("Taches")
                        .HasForeignKey("ProjetidProjet");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Users", b =>
                {
                    b.HasOne("Project_Groupe_NST.Models.CRA", null)
                        .WithMany("Userss")
                        .HasForeignKey("CRAidCRA");

                    b.HasOne("Project_Groupe_NST.Models.Role", null)
                        .WithMany("Userss")
                        .HasForeignKey("roleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Activite", b =>
                {
                    b.Navigation("Missions");

                    b.Navigation("Projets");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.CRA", b =>
                {
                    b.Navigation("Userss");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.EtatActivite", b =>
                {
                    b.Navigation("Activites");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.EtatMission", b =>
                {
                    b.Navigation("Missions");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.EtatProjet", b =>
                {
                    b.Navigation("Projets");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.EtatTache", b =>
                {
                    b.Navigation("Taches");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Mission", b =>
                {
                    b.Navigation("OrdreMissions");

                    b.Navigation("Taches");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Projet", b =>
                {
                    b.Navigation("Missions");

                    b.Navigation("Taches");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Role", b =>
                {
                    b.Navigation("Userss");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.TypeActivite", b =>
                {
                    b.Navigation("Activites");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Type_Projet", b =>
                {
                    b.Navigation("Projets");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.Users", b =>
                {
                    b.Navigation("Absence");

                    b.Navigation("Notification");

                    b.Navigation("pointages");
                });

            modelBuilder.Entity("Project_Groupe_NST.Models.typeAbsence", b =>
                {
                    b.Navigation("Absences");
                });
#pragma warning restore 612, 618
        }
    }
}
